---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

tasks:

  setup:
    dir: '{{.KUBERNETES_DIR}}/bootstrap/talos'
    cmds:
      - until kubectl wait --for=condition=Ready=False nodes --all --timeout=600s; do sleep 10; done
      - helmfile --file {{.KUBERNETES_DIR}}/bootstrap/helmfile.yaml apply --skip-diff-on-install --suppress-diff
      - until kubectl wait --for=condition=Ready nodes --all --timeout=600s; do sleep 10; done
    preconditions:
      - msg: Missing kubeconfig
        sh: test -f {{.KUBECONFIG}}
      - msg: Missing helmfile
        sh: test -f {{.KUBERNETES_DIR}}/bootstrap/helmfile.yaml

  "reconcile":
    desc: Force update Flux to pull in changes from your Git repository
    cmd: flux --namespace flux-system reconcile kustomization cluster-apps --with-source
    preconditions:
      - test -f {{.KUBECONFIG}}
      - which flux

  "*-ks":
    desc: Render a Flux Kustomizations [DIR=required] [NAME] [SRC]
    vars:
      OPERATION: "{{index .MATCH 0}}"
      OPERATION_ARGS: |-
        {{if eq .OPERATION "apply"}} --server-side --field-manager=kustomize-controller{{end}}
      KS_DIR: "{{.K8S_DIR}}/apps/{{.DIR}}"
    requires:
      vars:
        - DIR
    preconditions:
      - '[[ "{{.OPERATION}}" == "build" || "{{.OPERATION}}" == "apply" || "{{.OPERATION}}" == "delete" ]]'
      - which kubectl flux-local
      - test -d {{.KS_DIR}}
    cmds:
      - flux-local build ks --all-namespaces {{.NS}} --path {{.KS_DIR}} {{.NAME}}
        | yq -
        {{ if or (eq .OPERATION "apply") (eq .OPERATION "delete") -}}
        | kubectl {{.OPERATION}} {{- .OPERATION_ARGS}} --filename -
        {{ end }}

  "*-ks-all":
    desc: Suspend or resume all Flux Kustomizations
    vars:
      STATE: '{{index .MATCH 0}}'
    preconditions:
      - '[[ "{{.STATE}}" == "suspend" || "{{.STATE}}" == "resume" ]]'
      - which flux kubectl
    cmds:
      - kubectl get ns -o jsonpath='{.items[*].metadata.name}' | xargs -n1 flux {{.STATE}} ks --all --namespace
