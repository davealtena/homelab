---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: security-operator
  namespace: security-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: security-operator
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  - rolebindings
  - roles
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - security.prlx.eu
  resources:
  - networkfindings
  - rbacfindings
  - securitycontextfindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - security.prlx.eu
  resources:
  - networkfindings/finalizers
  - rbacfindings/finalizers
  - securitycontextfindings/finalizers
  verbs:
  - update
- apiGroups:
  - security.prlx.eu
  resources:
  - networkfindings/status
  - rbacfindings/status
  - securitycontextfindings/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: security-operator
subjects:
- kind: ServiceAccount
  name: security-operator
  namespace: ${NAMESPACE}
roleRef:
  kind: ClusterRole
  name: security-operator
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: security-operator
  namespace: security-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: security-operator
  template:
    metadata:
      labels:
        app: security-operator
    spec:
      serviceAccountName: security-operator
      containers:
      - name: operator
        image: harbor.altena.io/prlx-eu/agent:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: metrics
        - containerPort: 8081
          name: health
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
        livenessProbe:
          httpGet:
            path: /healthz
            port: health
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: health
          initialDelaySeconds: 5
          periodSeconds: 10
